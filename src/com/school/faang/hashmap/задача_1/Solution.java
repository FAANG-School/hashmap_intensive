package com.school.faang.hashmap.задача_1;

import java.util.HashMap;
import java.util.Map;

public class Solution {
    public static void main(String[] args) {
        String text = """
                Помню, как сейчас: лето 2014 года, в отдел геослужбы Севастопольской администрации пришли неприметные
                 люди в штатском,от которых за версту разило подозрительностью и серьёзностью выполняемых задач.
                  Чекисты припёрлись, одним словом.Проверять правильность охранения секретных планов ©.

                А надо заметить, что отношение к секретности картографических материалов довольно сильно отличалось в российских
                 и украинских гражданских структурах: карты и планы, напечатанные во времена развитого социализма позднего СССР,
                  уже давно были рассекречены в украинском правовом поле, продолжая лишь иногда для солидности носить гриф ДСП,
                   в то время как доблестные потомки Дзержинского, охранители скрепных скреп продолжали свято дрочить на запреты
                    и допуски, не смотря на давно утерянную актуальность картографии 60-70 годов прошлого века.

                В самом деле, какая нафиг секретность может быть у карт масштаба 1:10000, в которых разобраться может только
                специалист, если гуглосервисы уже в то время выдавали картинку схожего масштаба, на которой всё прекрасно было видно
                 любому обывателю.
                 Но в украинской геослужбе было ещё кое-что, чего чекисты вовсе и не ожидали: свежайшие ортофотопланы
                  городской территории масштаба 1:2000, выполненные буквально году в 2011, в рамках программы развития
                   кадастровой системы. На этих ортофотопланах гораздо отчётливее, чем на гуглоснимках, было видно ВСЁ,
                    в том числе, конечно же, и территории войсковых частей, коих в Севастополе великое множество.
                                """;

        text = text.toLowerCase().replaceAll("[^a-zа-я0-9\\s]", "");
        String[] words = text.split(" ");

        Map<String, Integer> wordCount = new HashMap<>();

        for (String word : words) {
            if (word.isBlank()) continue;
            wordCount.put(word, wordCount.getOrDefault(word, 0) + 1);
        }

        for (Map.Entry<String, Integer> entry : wordCount.entrySet()) {
            if (entry.getValue() > 5) {
                System.out.println(entry.getKey() + " - " + entry.getValue());
            }
        }
    }
}
